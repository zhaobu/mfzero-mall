version: "3.8"

# 申明同一个网络
networks:
  mf_net:
    name: mf_net
    # external: true # 申明网络已经在外部创建

    # 游戏数据卷
volumes:
  mf_etcd_data:
    driver: local
  mf_redisdata:
    driver: local
  mf_nginxdata:
    driver: local
  mf_mysql8data:
    driver: local
  mf_jagerdata:
    driver: local
  # 服务
services:
  mf_etcd:
    image: registry.cn-hangzhou.aliyuncs.com/lwopen/microbase_etcd:latest
    container_name: mf_etcd
    restart: always
    ports:
      - ${ETCD_HTTP_PORT}:2379
      - ${ETCD_Peer_PORT}:2380
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://vb-dev:2379
    volumes:
      - mf_etcd_data:/bitnami/etcd
    networks:
      - mf_net

  mf_etcd_web:
    image: evildecay/etcdkeeper
    container_name: mf_etcd_web
    restart: always
    ports:
      - 9080:8080
    networks:
      - mf_net
    # entrypoint: [ "./etcdkeeper.bin", "-h", 0.0.0.0, -p, 8080 ]

  mf_redis:
    image: registry.cn-hangzhou.aliyuncs.com/lwopen/microbase_redis:latest
    container_name: mf_redis
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - mf_net
    command: /usr/local/etc/redis/redis.conf
    volumes:
      # 持久存储redis的数据
      - ./redis/data:/data
      # 挂载本地配置文件
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf

  mf_mysql8:
    image: registry.cn-hangzhou.aliyuncs.com/lwopen/microbase_mysql8_0_27:latest
    container_name: mf_mysql8
    restart: always
    ports:
      - ${MYSQL_8_0_27PORT}:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} # 设置 Mysql root 用户密码
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER} # 设置 Mysql 用户名称
      - MYSQL_PASSWORD=${MYSQL_PASSWORD} # 设置 Mysql 用户密码
    networks:
      - mf_net
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_bin
    working_dir: /home
    volumes:
      - ./mysql/8.0.27/conf/docker.cnf:/etc/mysql/conf.d/docker.cnf:rw
      - ../../doc/sql:/data/sql/:rw
      - ./sql:/data/dbinit:rw
      - ./mysql/8.0.27/exec.sh:/home/exec.sh
      - mf_mysql8data:/var/lib/mysql
  mf_prometheus:
    image: registry.cn-hangzhou.aliyuncs.com/lwopen/microbase_prometheus:latest
    container_name: mf_prometheus
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml # 将 prometheus 配置文件挂载到容器里
    ports:
      - "${PROMETHEUS_PORT}:9090" # 设置容器9090端口映射指定宿主机端口，用于宿主机访问可视化web
    networks:
      - mf_net

  mf_grafana:
    image: registry.cn-hangzhou.aliyuncs.com/lwopen/microbase_grafana:latest
    container_name: mf_grafana
    restart: always
    ports:
      - "${GRAFANA_PORT}:3000" # 设置容器3000端口映射指定宿主机端口，用于宿主机访问可视化web
    networks:
      - mf_net

  mf_jaeger:
    image: registry.cn-hangzhou.aliyuncs.com/lwopen/microbase_jaeger:latest
    container_name: mf_jaeger
    restart: always
    ports:
      - "${JAEGER_PORT}:16686" # 设置容器16686端口映射指定宿主机端口，用于宿主机访问可视化web
    networks:
      - mf_net
    volumes:
      - mf_jagerdata:/tmp

  mf_dtm:
    image: registry.cn-hangzhou.aliyuncs.com/lwopen/microbase_dtm:latest
    container_name: mf_dtm
    restart: always
    environment:
      - STORE_DRIVER=${DTM_STORE_DRIVER}
      - STORE_HOST=${DTM_STORE_HOST}
      - STORE_USER=${DTM_STORE_USERNAME}
      - STORE_PASSWORD=${DTM_STORE_PASSWORD}
      - STORE_PORT=${DTM_STORE_PORT}
    ports:
      - "${DTM_HTTP_PORT}:36789"
      - "${DTM_GRPC_PORT}:36790"
    networks:
      - mf_net

  mf_gozero:
    image: registry.cn-hangzhou.aliyuncs.com/lwopen/microbase_golang_gozero:latest
    container_name: mf_gozero
    restart: always
    working_dir: /code
    tty: true
    volumes:
      - ../../:/code
    networks:
      - mf_net
